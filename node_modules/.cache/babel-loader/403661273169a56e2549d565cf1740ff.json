{"ast":null,"code":"import _objectSpread from \"D:/\\u524D\\u7AEF/Myzhihu/zhihu/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mixin } from '@/mixin';\nimport router from '../router';\nimport { mapGetters, mapState, mapMutations } from 'vuex';\nimport axios from 'axios';\nexport default {\n  name: 'comment',\n  mixins: [mixin],\n  data: function data() {\n    return {\n      shortComment: [],\n      longComment: [],\n      dianzan: 'icon-dianzan'\n    };\n  },\n  methods: _objectSpread(_objectSpread({}, mapMutations('collectOption', ['commentsAppend'])), {}, {\n    likeIt: function likeIt(indexItem, ls) {\n      if (ls == 'l') {\n        if (this.longComment[indexItem].isLike == 'icon-dianzan') {\n          this.longComment[indexItem].likes += 1;\n          this.longComment[indexItem].isLike = 'icon-dianzan_kuai';\n        } else {\n          this.longComment[indexItem].likes -= 1;\n          this.longComment[indexItem].isLike = 'icon-dianzan';\n        }\n      }\n\n      if (ls == 's') {\n        if (this.shortComment[indexItem].isLike == 'icon-dianzan') {\n          this.shortComment[indexItem].likes += 1;\n          this.shortComment[indexItem].isLike = 'icon-dianzan_kuai';\n        } else {\n          this.shortComment[indexItem].likes -= 1;\n          this.shortComment[indexItem].isLike = 'icon-dianzan';\n        }\n      }\n\n      this.commentsAppend({\n        'id': this.id,\n        'longComment': this.longComment,\n        'shortComment': this.shortComment\n      });\n    },\n    writeComment: function writeComment() {\n      router.push({\n        name: 'writeComment'\n      });\n    }\n  }),\n  computed: _objectSpread(_objectSpread({}, mapGetters('mainOption', ['TotalComment'])), mapState('mainOption', ['id', 'longCommentN', 'shortCommentN'])),\n  created: function created() {\n    var _this = this;\n\n    var commentsHistoryThis = null;\n\n    if (sessionStorage.getItem('comments') != null) {\n      var commentsHistory = JSON.parse(sessionStorage.getItem('comments'));\n      commentsHistory.forEach(function (item) {\n        if (item.id == _this.id) {\n          commentsHistoryThis = item;\n        }\n      });\n    }\n\n    if (commentsHistoryThis == null) {\n      axios.get('api/4/story/' + this.id + '/long-comments').then(function (response) {\n        _this.longComment = response.data.comments;\n\n        _this.longComment.forEach(function (longCommentItem, index) {\n          _this.longComment[index].isLike = 'icon-dianzan';\n        });\n      });\n      axios.get('api/4/story/' + this.id + '/short-comments').then(function (response) {\n        _this.shortComment = response.data.comments;\n\n        _this.shortComment.forEach(function (shortCommentItem, index) {\n          _this.shortComment[index].isLike = 'icon-dianzan';\n        });\n      });\n    } else {\n      this.longComment = commentsHistoryThis.longComment;\n      this.shortComment = commentsHistoryThis.shortComment;\n    } // axios.get('api/4/story/'+this.id+'/long-comments').then(response =>{\n    //     this.longComment = response.data.comments\n    //     this.longComment.forEach((longCommentItem,index)=>{\n    //         this.longComment[index].isLike = 'icon-dianzan'\n    //         if(commentsHistoryThis!=null){\n    //             this.longComment[index].isLike = commentsHistoryThis.longComment[index].isLike\n    //             if(this.longComment[index].isLike=='icon-dianzan_kuai'){\n    //                 this.longComment[index].likes+=1\n    //             }\n    //         }\n    //     })\n    // })\n    // axios.get('api/4/story/'+this.id+'/short-comments').then(response =>{\n    //     this.shortComment = response.data.comments\n    //     this.shortComment.forEach((shortCommentItem,index)=>{\n    //         this.shortComment[index].isLike = 'icon-dianzan'\n    //         if(commentsHistoryThis!=null){\n    //             this.shortComment[index].isLike = commentsHistoryThis.shortComment[index].isLike\n    //             if(this.shortComment[index].isLike=='icon-dianzan_kuai'){\n    //                 this.shortComment[index].likes+=1\n    //             }\n    //         }\n    //     })            \n    // })\n\n\n    setTimeout(function () {\n      _this.commentsAppend({\n        'id': _this.id,\n        'longComment': _this.longComment,\n        'shortComment': _this.shortComment\n      });\n    }, 1000);\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiFA;AACA;AACA;AACA;AACA;EACAA,eADA;EAEAC,eAFA;EAGAC,IAHA,kBAGA;IACA;MACAC,gBADA;MAEAC,eAFA;MAGAC;IAHA;EAKA,CATA;EAUAC,yCACAC,iDADA;IAEAC,MAFA,kBAEAC,SAFA,EAEAC,EAFA,EAEA;MACA;QACA;UACA;UACA;QACA,CAHA,MAIA;UACA;UACA;QACA;MACA;;MACA;QACA;UACA;UACA;QACA,CAHA,MAIA;UACA;UACA;QACA;MACA;;MACA;QAAA;QAAA;QAAA;MAAA;IACA,CAxBA;IAyBAC,YAzBA,0BAyBA;MACAC;QAAAZ;MAAA;IACA;EA3BA,EAVA;EAuCAa,0CACAC,0CADA,GAEAC,+DAFA,CAvCA;EA2CAC,OA3CA,qBA2CA;IAAA;;IACA;;IACA;MACA;MACAC;QACA;UACAC;QACA;MACA,CAJA;IAKA;;IACA;MACAC;QACA;;QACA;UACA;QACA,CAFA;MAGA,CALA;MAMAA;QACA;;QACA;UACA;QACA,CAFA;MAGA,CALA;IAQA,CAfA,MAgBA;MACA;MACA;IACA,CA7BA,CA8BA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;;IAEAC;MACA;QAAA;QAAA;QAAA;MAAA;IACA,CAFA,EAEA,IAFA;EAGA;AAtGA","names":["name","mixins","data","shortComment","longComment","dianzan","methods","mapMutations","likeIt","indexItem","ls","writeComment","router","computed","mapGetters","mapState","created","commentsHistory","commentsHistoryThis","axios","setTimeout"],"sourceRoot":"src/pages","sources":["Comment.vue"],"sourcesContent":["<template>\r\n  <div class=\"commmentWrapper\">\r\n    <header>\r\n        <i class=\"iconfont icon-fanhui\" @click=\"back\"></i>\r\n        <span>{{TotalComment}} 条评论</span>\r\n    </header>\r\n    <div class=\"blank\"></div>\r\n    <div class=\"long\">\r\n        <div class=\"longNumber\" v-if=\"longCommentN*1.0>0\">\r\n            {{longCommentN}} 条长评\r\n        </div>\r\n\r\n        <div v-for=\"(longCommentItem,index) in longComment\" :key=\"index\" class=\"item\">\r\n            <div class=\"headPhoto\">\r\n                <img :src=\"longCommentItem.avatar\" alt=\"\">\r\n            </div>\r\n            <div class=\"content\">\r\n                <div class=\"top\">\r\n                    <span>{{longCommentItem.author}}</span>\r\n                    <i class=\"iconfont icon-gengduo\"></i>\r\n                </div>\r\n                <div class=\"text\">\r\n                    {{longCommentItem.content}}\r\n                </div>\r\n                <div class=\"bottom\">\r\n                    <span>{{new Date(parseInt(longCommentItem.time) * 1000).toLocaleString().replace(/:\\d{1,2}$/,'').replace(/^\\d{1,4}\\//,'').replace(/\\//,'-')}}</span>\r\n                    <div class=\"zanping\">\r\n                        <span>\r\n                            {{longCommentItem.likes*1.0}}\r\n                        </span>\r\n                        <i class=\"iconfont\" \r\n                        :class=\"longCommentItem.isLike\"\r\n                        @click=\"likeIt(index,'l')\"></i>\r\n                        <i class=\"iconfont icon-pinglun\"></i>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"short\">\r\n        <div class=\"longNumber\">\r\n            {{shortCommentN}} 条短评\r\n        </div>\r\n\r\n        <div v-for=\"(shortCommentItem,index) in shortComment\" :key=\"index\" class=\"item\">\r\n            <div class=\"headPhoto\">\r\n                <img :src=\"shortCommentItem.avatar\" alt=\"\">\r\n            </div>\r\n            <div class=\"content\">\r\n                <div class=\"top\">\r\n                    <span>{{shortCommentItem.author}}</span>\r\n                    <i class=\"iconfont icon-gengduo\"></i>\r\n                </div>\r\n                <div class=\"text\">\r\n                    {{shortCommentItem.content}}\r\n                </div>\r\n                <div class=\"bottom\">\r\n                    <!-- {{date('H:i:s',longCommentItem.time)}} -->\r\n                    <span>{{new Date(parseInt(shortCommentItem.time) * 1000).toLocaleString().replace(/:\\d{1,2}$/,'').replace(/^\\d{1,4}\\//,'').replace(/\\//,'-')}}</span>\r\n                    <div class=\"zanping\">\r\n                        <span>\r\n                            {{shortCommentItem.likes*1.0}}\r\n                        </span>\r\n                        <i class=\"iconfont\" \r\n                        :class=\"shortCommentItem.isLike\"\r\n                        @click=\"likeIt(index,'s')\"></i>\r\n                        <i class=\"iconfont icon-pinglun\"></i>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"writeComment\" @click=\"writeComment\">\r\n        <img src=\"../assets/user.svg\" alt=\"\">\r\n        <span>说说你的看法...</span>\r\n    </div>\r\n    <div class=\"blank2\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mixin } from '@/mixin'\r\nimport router from '../router'\r\nimport {mapGetters,mapState,mapMutations} from 'vuex'\r\nimport axios from 'axios'\r\nexport default {\r\n    name:'comment',\r\n    mixins:[mixin],\r\n    data() {\r\n        return {\r\n            shortComment:[],\r\n            longComment:[],\r\n            dianzan:'icon-dianzan'\r\n        }\r\n    },\r\n    methods: {\r\n        ...mapMutations('collectOption',['commentsAppend']),\r\n        likeIt(indexItem,ls){\r\n            if(ls=='l'){\r\n                if(this.longComment[indexItem].isLike == 'icon-dianzan'){\r\n                    this.longComment[indexItem].likes += 1\r\n                    this.longComment[indexItem].isLike = 'icon-dianzan_kuai'\r\n                }\r\n                else{\r\n                    this.longComment[indexItem].likes -= 1\r\n                    this.longComment[indexItem].isLike = 'icon-dianzan'\r\n                }\r\n            }\r\n            if(ls=='s'){\r\n                if(this.shortComment[indexItem].isLike == 'icon-dianzan'){\r\n                    this.shortComment[indexItem].likes += 1\r\n                    this.shortComment[indexItem].isLike = 'icon-dianzan_kuai'\r\n                }\r\n                else{\r\n                    this.shortComment[indexItem].likes -= 1\r\n                    this.shortComment[indexItem].isLike = 'icon-dianzan'\r\n                }\r\n            }\r\n            this.commentsAppend({'id':this.id,'longComment':this.longComment,'shortComment':this.shortComment})\r\n        },\r\n        writeComment(){\r\n            router.push({name:'writeComment'})\r\n        }\r\n    },\r\n    computed:{\r\n        ...mapGetters('mainOption',['TotalComment']),\r\n        ...mapState('mainOption',['id','longCommentN','shortCommentN'])\r\n    },\r\n    created() {\r\n        let commentsHistoryThis = null\r\n        if(sessionStorage.getItem('comments')!=null){\r\n            var commentsHistory = JSON.parse(sessionStorage.getItem('comments'))\r\n            commentsHistory.forEach((item)=>{\r\n                if(item.id == this.id){\r\n                    commentsHistoryThis = item\r\n                }\r\n            })\r\n        }\r\n        if(commentsHistoryThis==null){\r\n            axios.get('api/4/story/'+this.id+'/long-comments').then(response =>{\r\n            this.longComment = response.data.comments\r\n            this.longComment.forEach((longCommentItem,index)=>{\r\n                this.longComment[index].isLike = 'icon-dianzan'\r\n                })\r\n            })\r\n        axios.get('api/4/story/'+this.id+'/short-comments').then(response =>{\r\n            this.shortComment = response.data.comments\r\n            this.shortComment.forEach((shortCommentItem,index)=>{\r\n                this.shortComment[index].isLike = 'icon-dianzan'\r\n                })            \r\n            })\r\n\r\n\r\n        }\r\n        else{\r\n            this.longComment = commentsHistoryThis.longComment\r\n            this.shortComment = commentsHistoryThis.shortComment\r\n        }\r\n        // axios.get('api/4/story/'+this.id+'/long-comments').then(response =>{\r\n        //     this.longComment = response.data.comments\r\n        //     this.longComment.forEach((longCommentItem,index)=>{\r\n        //         this.longComment[index].isLike = 'icon-dianzan'\r\n        //         if(commentsHistoryThis!=null){\r\n        //             this.longComment[index].isLike = commentsHistoryThis.longComment[index].isLike\r\n        //             if(this.longComment[index].isLike=='icon-dianzan_kuai'){\r\n        //                 this.longComment[index].likes+=1\r\n        //             }\r\n        //         }\r\n        //     })\r\n        // })\r\n\r\n        // axios.get('api/4/story/'+this.id+'/short-comments').then(response =>{\r\n        //     this.shortComment = response.data.comments\r\n        //     this.shortComment.forEach((shortCommentItem,index)=>{\r\n        //         this.shortComment[index].isLike = 'icon-dianzan'\r\n        //         if(commentsHistoryThis!=null){\r\n        //             this.shortComment[index].isLike = commentsHistoryThis.shortComment[index].isLike\r\n        //             if(this.shortComment[index].isLike=='icon-dianzan_kuai'){\r\n        //                 this.shortComment[index].likes+=1\r\n        //             }\r\n        //         }\r\n        //     })            \r\n        // })\r\n\r\n        setTimeout(()=>{\r\n            this.commentsAppend({'id':this.id,'longComment':this.longComment,'shortComment':this.shortComment})\r\n        },1000)\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n.commmentWrapper{\r\n  width: 100%;\r\n  header{\r\n    height: 0.49rem;\r\n    font-size: 0.16rem;\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    padding: 0.27rem 0 0;\r\n    border-bottom: 1px #ddd solid;\r\n    background: white;\r\n    position: fixed;\r\n    top: 0px;\r\n    font-weight: 600;\r\n    line-height: 100%;\r\n\r\n    i{\r\n      position: absolute;\r\n      left: 5%;\r\n       font-size: 0.2rem;\r\n    }\r\n  }\r\n\r\n.blank{\r\n    width: 100%;\r\n    height: 0.7rem;\r\n}\r\n.blank2{\r\n    width: 100%;\r\n    height: 0.82rem;\r\n}\r\n.longNumber{\r\n    margin-top: 0.13rem;\r\n    font-size: 0.12rem;\r\n    font-weight: 550;\r\n    margin-bottom: 0.15rem;\r\n    margin-left: 0.15rem;\r\n}\r\n.item{\r\n    padding:  0.15rem 0.15rem 0.2rem 0.15rem;\r\n    width: 100%;\r\n    display: flex;\r\n    font-size: 0.14rem;\r\n    border-bottom: 1px #ddd solid;\r\n}\r\n.item .headPhoto img{\r\n    width: 0.3rem;\r\n    height: 0.3rem;\r\n    border-radius: 50%;\r\n    margin-right: 0.10rem;\r\n    font-size: 0.14rem;\r\n}\r\n.item .content{\r\n    font-size: 0.14rem;\r\n    width: 100%;\r\n    margin: 0;\r\n}\r\n.item .content .top{\r\n    font-size: 0.14rem;\r\n    line-height: 0.14rem;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin-bottom: 0.1rem;\r\n\r\n}\r\n.item .content .top span{\r\n    font-weight: 600;\r\n}\r\n.item .content .top i{\r\n    /* flex: 1; */\r\n    margin-right: 0;\r\n}\r\n.item .content .bottom{\r\n    margin-top: 0.2rem;\r\n    color: #888;\r\n    display: flex;\r\n    justify-content: space-between;\r\n}\r\n.item .content .bottom .zanping .icon-pinglun{\r\n    margin-left: 0.35rem;\r\n    \r\n}\r\n.item .content .bottom .zanping {\r\n    font-size: 0.16rem;\r\n}\r\n.writeComment{\r\n    width: 100%;\r\n    height: 0.52rem;\r\n    background: #eee;\r\n    position: fixed;\r\n    bottom: 0;\r\n    padding-top: 0.12rem;\r\n    padding-left: 0.15rem;\r\n    font-size: 0.12rem;\r\n    color: #AEAEAE;\r\n}\r\n.writeComment img{\r\n    margin-right: 0.06rem;\r\n    width: 0.3rem;\r\n    height: 0.3rem;\r\n    border-radius: 50%;\r\n}\r\n\r\n\r\n}\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}