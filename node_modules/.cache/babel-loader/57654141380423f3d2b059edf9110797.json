{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nexport default {\n  name: 'InfiniteScroll',\n  data: function data() {\n    return {\n      count: 0,\n      story: {},\n      data: ''\n    };\n  },\n  methods: {\n    load: function load() {\n      this.count += 2;\n    }\n  },\n  created: function created() {\n    var _this = this;\n\n    axios.get('api/4/news/latest').then(function (response) {\n      _this.story = response.data.stories;\n      _this.date = new Date();\n    }).catch(function (error) {\n      console.log(_this.error);\n    });\n    console.log(this.story);\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;AAoBA;AACA;EACAA,sBADA;EAEAC,IAFA,kBAEA;IACA;MACAC,QADA;MAEAC,SAFA;MAGAF;IAHA;EAKA,CARA;EASAG;IACAC,IADA,kBACA;MACA;IACA;EAHA,CATA;EAcAC,OAdA,qBAcA;IAAA;;IACAC;MACA;MACA;IACA,CAHA,EAIAC,KAJA,CAIA;MACAC;IACA,CANA;IAOAA;EACA;AAvBA","names":["name","data","count","story","methods","load","created","axios","catch","console"],"sourceRoot":"src/components","sources":["InfiniteScroll.vue"],"sourcesContent":["<template>\r\n    <div class=\"infiniteWrapper\" >\r\n        <ul class=\"infinite-list\" \r\n        v-infinite-scroll=\"load\" \r\n        style=\"overflow:auto\"\r\n    \r\n        >\r\n        <li v-for=\"i in count\" class=\"infinite-list-item\" :key=\"i\">\r\n        {{ i }}\r\n        </li>\r\n        </ul>\r\n        <template>\r\n             <el-backtop target=\".infiniteWrapper\"> </el-backtop>   \r\n        </template>\r\n        \r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nexport default {\r\n    name:'InfiniteScroll',\r\n    data () {\r\n        return {\r\n            count: 0,\r\n            story:{},\r\n            data:''\r\n        }\r\n    },\r\n    methods: {\r\n        load () {\r\n        this.count += 2\r\n        }\r\n    },\r\n    created() {\r\n        axios.get('api/4/news/latest').then(response => {\r\n            this.story = response.data.stories\r\n            this.date = new Date()\r\n        })\r\n        .catch(error => {\r\n            console.log(this.error)\r\n        })\r\n        console.log(this.story);\r\n    },\r\n}\r\n</script>\r\n<style scoped lang=\"less\">\r\n.infinite-list{\r\n    li{\r\n        background-color: aliceblue;\r\n    }\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}